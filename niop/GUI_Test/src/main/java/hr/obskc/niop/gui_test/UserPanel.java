/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.obskc.niop.gui_test;

import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class UserPanel extends javax.swing.JPanel {
    private PanelActionListener listener; // 2. korak - varijabla za promatrača događaja u ovom panelu

    /**
     * Creates new form UserPanel
     */
    public UserPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userNameLabel = new javax.swing.JLabel();
        userSurnameLabel = new javax.swing.JLabel();
        userAddressLabel = new javax.swing.JLabel();
        userCityLabel = new javax.swing.JLabel();
        userNameText = new javax.swing.JTextField();
        userSurnameText = new javax.swing.JTextField();
        userAddressText = new javax.swing.JTextField();
        userCityText = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();

        userNameLabel.setText("Ime");

        userSurnameLabel.setText("Prezime");

        userAddressLabel.setText("Adresa");

        userCityLabel.setText("Mjesto");

        confirmButton.setText("Potvrdi");
        confirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(confirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userSurnameLabel)
                            .addComponent(userNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(userSurnameText)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userAddressLabel)
                            .addComponent(userCityLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userAddressText)
                            .addComponent(userCityText))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel)
                    .addComponent(userNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userSurnameLabel)
                    .addComponent(userSurnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userAddressLabel)
                    .addComponent(userAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userCityLabel)
                    .addComponent(userCityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmButtonMouseClicked
        String name = userNameText.getText();
        String surname = userSurnameText.getText();
        String address = userAddressText.getText();
        String city = userCityText.getText();
        
        if (name.isBlank() || surname.isBlank() || address.isBlank() || city.isBlank()) {
            JOptionPane.showMessageDialog(this, "Morate unijeti sve podatke", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        System.out.println(String.format("Ime i prezime: %s %s, Adresa: %s, %s", name, surname, address, city));
        
        // 5. korak - ovdje se akcija dogodi, moramo pozvati kod za obavještavanje promatrača
        HashMap<String, String> data = new HashMap<>();
        data.put("name", name);
        data.put("surname", surname);
        data.put("address", address);
        data.put("city", city);
        notifyListener(data);
    }//GEN-LAST:event_confirmButtonMouseClicked

   public void setPanelActionListener(PanelActionListener listener) { // 3. korak - kod za definiranje promatrača
       this.listener = listener;
   }
   
   private void notifyListener(HashMap<String, String> data) { // 4. korak - kod za obajvještavanje promatrača
       if (listener != null) {
           listener.onPanelAction(data);
       }   
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel userAddressLabel;
    private javax.swing.JTextField userAddressText;
    private javax.swing.JLabel userCityLabel;
    private javax.swing.JTextField userCityText;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameText;
    private javax.swing.JLabel userSurnameLabel;
    private javax.swing.JTextField userSurnameText;
    // End of variables declaration//GEN-END:variables
}
